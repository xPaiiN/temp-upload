# diskover default/sample config file
#
# default search paths for config
# macOS: ~/.config/diskover and ~/Library/Application Support/diskover
# Other Unix: ~/.config/diskover and /etc/diskover
# Windows: %APPDATA%\diskover where the APPDATA environment variable falls back to %HOME%\AppData\Roaming if undefined
#
appName: diskover
#logLevel: WARN
#logLevel: DEBUG
logLevel: INFO
logToFile: False
#logToFile: True
logDirectory: /var/log/diskover/
# Windows: 
#logDirectory: C:\Program Files\diskover\logs

diskover:
    # max number of directory tree walk threads (used by tree dir arg(s)), set to a number or leave blank
    # to auto set based on number of cpus
    #maxwalkthreads: 4
    maxwalkthreads: 
    # max number of crawl threads
    # each maxwalkthreads can start up to maxthreads for each directory at level 1 of tree dir arg(s)
    # set to a number or leave blank to auto set based on number of cpus
    #maxthreads: 20
    maxthreads: 
    # crawl thread directory tree depth
    # a thread is started (up to maxthreads) for each directory at level threaddirdepth of tree dir arg(s)
    # set to a number, between 1 and 3, or leave blank to auto set based on number of directories in level 1, 2, etc.
    # when left blank, threaddirdepth max is 3
    #threaddirdepth: 1
    threaddirdepth: 
    # block size used for du size
    blocksize: 512
    excludes:
        # directory names and absolute paths you want to exclude from crawl
        # directory excludes uses python re.search for string search (regex)
        # directory excludes are case-sensitive
        # Examples: .* or .backup or .backup* or /dir/dirname or K:\\\\dir\\\\dirname
        # to exclude none use empty list []
        dirs: [".*", ".snapshot", ".Snapshot", "~snapshot", "~Snapshot", ".zfs"]
        #dirs: []
        # files you want to exclude from crawl 
        # can include wildcards (.*, *.doc or NULLEXT for files with no extension)
        # file names are case-sensitive, extensions are not
        files: [".*", "Thumbs.db", ".DS_Store", "._.DS_Store", ".localized", "desktop.ini"]
        #files: []
        # exclude empty 0 byte files, set to True to exclude empty files or False to not exclude
        emptyfiles: True
        # exclude empty dirs, set to True to exclude empty dirs or False to not exclude
        emptydirs: True
        # exclude files smaller than min size in bytes
        minfilesize: 1
        #minfilesize: 512
        # check file times when excluding, set to True to use min/max time settings or False to not use
        checkfiletimes: False
        # exclude files modified less than x days ago
        minmtime: 0
        #minmtime: 30
        # exclude files modified more than x days ago
        maxmtime: 36500
        # exclude files changed less than x days ago
        minctime: 0
        # exclude files changed more than x days ago
        maxctime: 36500
        # exclude files accessed less than x days ago
        minatime: 0
        # exclude files accessed more than x days ago
        maxatime: 36500
    includes:
        # directory names and absolute paths you want to include (whitelist), case-sensitive,
        # to include none use empty list []
        #dirs: [".recycle"]
        dirs: []
        # files you want to include (whitelist), case-sensitive
        files: []
    ownersgroups:
        # control how owner (username) and group fields are stored for file and directory docs
        # store uid and gid's instead of trying to get owner and group names
        uidgidonly: False
        # owner/group names contain domain name
        # if domain name in owner/group names, set to True or if there is no domain name, set to False
        domain: False
        # character separator used on cifs/nfs mounts to separte user/group and domain name, usually \ or @
        domainsep: \
        # if domain name comes first before character separator, set this to True, otherwise False
        domainfirst: True
        # when indexing owner and group fields, keep the domain name
        keepdomain: False
    replacepaths:
        # translate path names set to True to enable or False to disable.
        # Set to True if crawling in Windows to replace drive letters and \ with /
        replace: False
        #from: /mnt/
        #to:  /vols/
        from: 
        to: 
    autotag:
        # auto tag feature only supported in Pro + editions
        # enable auto-tagging, set to True or False
        enable: False
        # autotag uses python re.search for string search (regex)
        # use python re.search raw strings r'pattern'
        rawstrings: False
        # pattern dictionaries to use when auto-tagging, name and path are case-sensitive
        # name and name_exclude search name field (file name)
        # path and path_exclude search parent_path field (parent path)
        # mtime, etc are in minimum days
        # tags is a list of tags you want to apply to any found items
        #files: 
        #dirs: 
        dirs: [
                {
                'name': [], 
                'name_exclude': [],  
                'path': [], 
                'path_exclude': [], 
                'mtime': 365, 'atime': 0, 'ctime': 0, 
                'tags': ['autotag', 'archive']
                },
                {
                'name': ['^tmp$', '^TMP$', '^temp$', '^TEMP$', '^Temp$', '^cache$', '^CACHE$', '^Cache$'], 
                'name_exclude': [], 
                'path': [], 
                'path_exclude': [],
                'mtime': 60, 'atime': 0, 'ctime': 0, 
                'tags': ['autotag', 'delete']
                }
            ]
        files: [
                {
                'name': [], 
                'name_exclude': [], 
                'ext': [], 
                'path': [], 
                'path_exclude': [], 
                'mtime': 180, 'atime': 180, 'ctime': 0, 
                'tags': ['autotag', 'cleanlist']
                },
                {
                'name': [], 
                'name_exclude': [], 
                'ext': ['^tmp$', '^temp$', '^cache$', '^bak$', '^old$', '^delete$'], 
                'path': [], 
                'path_exclude': [], 
                'mtime': 60, 'atime': 0, 'ctime': 0, 
                'tags': ['autotag', 'delete']
                }
            ]
    storagecost:
        # storage cost feature only supported in Pro + editions
        # generate storage cost for each file and directory, set to True or False
        enable: False
        # storage cost per GB
        #costpergb: 0.03
        costpergb: 0.08
        # use decimal base 10 (1000) or binary base 2 (1024) for GB size (set to 2 or 10)
        base: 2
        # use size or size_du (disk usage) field for calculating costs
        sizefield: size_du
        # pattern dictionaries to use when determing cost per GB (overrides costpergb above)
        # storage cost paths uses python re.search for string search (regex)
        # use python re.search raw strings r'pattern'
        rawstrings: False
        # paths search parent_path field (parent path), paths are case-sensitive
        paths: 
        # times are in minimum days
        times: 
        #paths: [{'path': ['/fastdiskpath1/', '/Fastdiskpath2/'], 'path_exclude': [], 'costpergb': 0.20}, {'path': ['/slowdiskpath1/', '/Slowdiskpath2/'], 'path_exclude': [], 'costpergb': 0.10}]
        #times: [{'mtime': 30, 'atime': 0, 'ctime': 0, 'costpergb': 0.15}, {'mtime': 90, 'atime': 90, 'ctime': 90, 'costpergb': 0.30}]
        # deciding factor if a match is in both paths and times, can be path or time
        priority: time
    plugins:
        # set to True to enable all plugins or False to disable all plugins
        enable: False
        # list of plugins (by name) to use for directories
        dirs: ['unixperms']
        # list of plugins (by name) to use for files
        files: ['unixperms', 'mediainfo']
    other:
        # restore atime/mtime for files and dirs during crawl
        # set to True or False, default False (useful for cifs which does not work with noatime mount option)
        # for nfs, it's preferable to use mount options ro,noatime,nodiratime
        restoretimes: False
        # directories that are taking more than slowdirtime (seconds) to scan will stop scanning
        # to stop scanning any slow directories set slowdirtimestopscan to True
        # to just warn set slowdirtimestopscan to False
        slowdirtime: 600
        slowdirtimestopscan: False
        # add file age range groups into directory docs fileages field
        fileagegroups: False
        # roll up sub-directory times (atime, mtime, ctime) into directory docs timerollup field
        rolluptimes: False


databases:
    elasticsearch:
        # set host to your Elasticsearch hostname or IP
        # if you have multiple ES hosts/nodes in your cluster, you can set multiple hosts using a list ['eshost1', 'eshost2']
        # if using AWS ES, set to your AWS ES endpoint name without http:// or https://
        host: localhost
        # set port to your ES port, default is 9200 for local and 443 or 80 for AWS ES
        port: 9200
        # set user and password if using ES http-auth or leave blank/empty if no user/pass
        #user: elastic
        #password: changeme
        user: 
        password: 
        # set https to True if using HTTP TLS/SSL or False if using http
        # for AWS ES, you will most likely want to set this to True
        https: False
        # set sslverification to False if you do not want to verify SSL or True to verify (default)
        sslverification: True
        # compress http data
        # for AWS ES, you will most likely want to set this to True
        httpcompress: False
        # timeout for connection to ES (default is 10)
        timeout: 60
        # number of connections kept open to ES when crawling (default is 10)
        maxsize: 20
        # max retries for ES operations (default is 0)
        maxretries: 3
        # wait for at least yellow status before bulk uploading (default is False), set to True if you want to wait
        wait: False
        # chunk size for ES bulk operations (default is 500)
        chunksize: 1000
        # number of shards for index (ES default is 1)
        shards: 1
        # number of replicas for index (ES default is 1)
        replicas: 0
        # the below settings are to optimize ES for crawling
        # index refresh interval (default is 1s), set to -1 to disable refresh during crawl (fastest performance but no index searches), after crawl is set back to 1s
        indexrefresh: 30s
        # disable replicas during crawl - set to True to turn off replicas or False to keep on (default False), after crawl is set back to replicas value above
        disablereplicas: True
        # transaction log flush threshold size (default 512mb)
        translogsize: 1gb
        # transaction log sync interval time (default 5s)
        translogsyncint: 30s
        # search scroll size (default 100 docs)
        scrollsize: 1000
        # ES compression, set to default (LZ4) or best_compression (DEFLATE)
        # using best_compression can reduce the size of your indices but can decrease indexing and search performance
        compression: default
